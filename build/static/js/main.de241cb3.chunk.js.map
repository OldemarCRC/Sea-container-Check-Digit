{"version":3,"sources":["Components/check-1.png","Components/calculateCheckDigit.js","Components/ContainerVerificationNr.js","Components/Footer.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","calculateCheckDigit","containerNumber","letterValues","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","sum","upperContainerNumber","toUpperCase","letters","slice","digits","factor","i","length","parseInt","mod","ContainerVerificationNr","inputText","setInputText","useState","results","setResults","errorMessage","setErrorMessage","React","createElement","className","onSubmit","event","preventDefault","newResults","trim","split","map","line","trimmedLine","containerNr","isValid","message","actualCheckDigit","calculatedCheckDigit","value","onChange","target","placeholder","rows","cols","type","onClick","handleClear","style","color","result","index","key","Footer","background","textAlign","padding","Date","getFullYear","Header","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.de241cb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check-1.f7dee31a.png\";","const calculateCheckDigit = (containerNumber) => {\r\n  const letterValues = {\r\n    A: 10, B: 12, C: 13, D: 14, E: 15, F: 16, G: 17, H: 18, I: 19, J: 20,\r\n    K: 21, L: 23, M: 24, N: 25, O: 26, P: 27, Q: 28, R: 29, S: 30,\r\n    T: 31, U: 32, V: 34, W: 35, X: 36, Y: 37, Z: 38,\r\n  };\r\n  let sum = 0;\r\n  const upperContainerNumber = containerNumber.toUpperCase();\r\n  const letters = upperContainerNumber.slice(0, 4);\r\n  const digits = upperContainerNumber.slice(4, 10);\r\n  let factor = 1;\r\n\r\n  for (let i = 0; i < letters.length; i++) {\r\n    sum += (letterValues[letters[i]] || 0) * factor;\r\n    factor *= 2;\r\n  }\r\n\r\n  for (let i = 0; i < digits.length; i++) {\r\n    sum += parseInt(digits[i], 10) * factor;\r\n    factor *= 2;\r\n  }\r\n\r\n  const mod = sum % 11;\r\n  const checkDigit = mod === 10 ? 0 : mod; // if mod = 10 then checkdigit is 0\r\n\r\n  return checkDigit;\r\n};\r\n\r\nexport default calculateCheckDigit;\r\n","import React, { useState } from \"react\";\r\nimport calculateCheckDigit from \"./calculateCheckDigit.js\";\r\n\r\nfunction ContainerVerificationNr() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrorMessage(\"\");\r\n\r\n    const containerLines = inputText.trim().split(/\\r?\\n/);\r\n\r\n    const newResults = containerLines.map((line) => {\r\n      const trimmedLine = line.trim();\r\n      if (trimmedLine.length !== 11) {\r\n        setErrorMessage(\"Invalid formatting on one or more lines.\");\r\n        return {\r\n          containerNr: trimmedLine,\r\n          isValid: false,\r\n          message: \"Invalid format\",\r\n        };\r\n      }\r\n      const actualCheckDigit = parseInt(trimmedLine.slice(-1), 10);\r\n      const calculatedCheckDigit = calculateCheckDigit(trimmedLine.slice(0, -1));\r\n      return {\r\n        containerNr: trimmedLine,\r\n        actualCheckDigit,\r\n        calculatedCheckDigit,\r\n        isValid: actualCheckDigit === calculatedCheckDigit,\r\n      };\r\n    });\r\n\r\n    if (!errorMessage) {\r\n      setResults(newResults);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInputText(\"\");\r\n    setResults([]);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-verification\">\r\n      <h1>Sea container Check-digit verification</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={inputText}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter container numbers separated by new lines with format: ABCU1234567\"\r\n          rows=\"10\"\r\n          cols=\"50\"\r\n        />\r\n        <div className=\"buttons\">\r\n          <button type=\"submit\" className=\"button\">Check</button>\r\n          <button type=\"button\" className=\"button\" onClick={handleClear}>Clear</button>\r\n        </div>\r\n      </form>\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n      <div className=\"results\">\r\n        {results.map((result, index) => (\r\n          <p key={index} style={{ color: result.isValid ? \"green\" : \"red\" }}>\r\n            {result.containerNr}:{\" \"}\r\n            {result.isValid\r\n              ? \"Valid\"\r\n              : `Invalid (Should be ${result.containerNr.slice(0, -1) + result.calculatedCheckDigit})`}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContainerVerificationNr;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{ background: 'white', textAlign: 'center', padding: '20px 0' }}>\r\n      <p>&copy; {new Date().getFullYear()} Check Digit. All rights reserved.</p>\r\n      <p>Powered by Koodi CRC.</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './header.css';\r\nimport logo from \"./check-1.png\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logo} alt=\"check-digit\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport ContainerVerificationNr from './Components/ContainerVerificationNr';\nimport Footer from './Components/Footer';\nimport Header from './Components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ContainerVerificationNr />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}